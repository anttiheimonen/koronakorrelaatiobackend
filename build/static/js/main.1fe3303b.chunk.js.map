{"version":3,"sources":["components/Navbar.js","components/Footer.js","components/Haku.js","components/EventBus.js","components/Popup.js","components/Legend.js","components/Kartta.js","components/Laatikko.js","services/thl.js","services/gtrends.js","components/korrelaatiolaskin.js","components/Slider.js","components/Dropdown.js","components/ScatterPlot-with-trendline.jsx","components/LinearGraph.jsx","App.js","serviceWorker.js","index.js"],"names":["Navigointi","Navbar","className","bg","variant","Brand","Nav","Button","Footer","Haku","value","handleChange","handleKeyPress","hakemassa","TextField","id","label","size","onChange","type","onKeyUp","disabled","autoFocus","eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","data","dispatchEvent","CustomEvent","remove","removeEventListener","Popup","popupContent","feature","properties","name","Legend","props","legend","L","control","position","onAdd","from","to","d","div","DomUtil","create","grades","labels","i","length","push","innerHTML","join","map","this","leaflet","addTo","MapControl","withLeaflet","kuntaRajat","require","haettuM","style","color","korona","weight","opacity","dashArray","fillOpacity","fillColor","resetHighlight","target","setStyle","highlightFeature","layer","Browser","ie","opera","edge","bringToFront","Kartta","state","tila","onEachFeature","bind","clickFeature","mouseover","mouseout","click","ReactDOMServer","renderToString","bindPopup","console","log","code","density","haku","features","undefined","koronaData","hakuData","Map","center","zoom","TileLayer","url","attribution","GeoJSON","Component","Laatikko","korrelaatio","teksti","Container","sana","koronaLaatikko","nimi","trends","uskottavuus","slice","getData","a","axios","get","vastaus","getDataEiAsync","_","gtrendsDataPohja","hakusana","alkupvm","loppupvm","hakuUrl","timerStart","Date","now","then","response","duration","status","gtrendsData","cloneDeep","Object","assign","catch","error","laskekorrelaatio","scatterData","koronakeskihajontalaskuri","hakukeskihajontalaskuri","koronakeskiarvolaskuri","hakukeskiarvolaskuri","hakupituus","koronapituus","element","solu","hakukeskiarvo","koronakeskiarvo","hakuhajonta","Math","sqrt","koronahajonta","pearsonlaskuri","pearsonjakaja","pearson","abs","useStyles","makeStyles","root","width","valuetext","RangeSlider","marks","today","getWeek","onejan","getFullYear","dayOfYear","getMonth","getDate","ceil","max","classes","Typography","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","min","DropdownExampleSearchDropdown","valittuKunta","kuntaValinnat","kuntaData","kunnat","kuntaNimi","iKunta","key","koodi","text","Dropdown","button","floating","labeled","icon","options","search","sortNumber","b","ScatterPlot","margin","height","x","scaleLinear","domain","range","y","transform","scale","axis","axisBottom","axisLeft","React","RenderCircles","renderCircles","coords","cx","cy","r","fill","TrendLine","x_coords","n","trendline","lr","sum_x","sum_y","sum_xy","sum_xx","sum_yy","slope","pow","intercept","linearRegression","lowest_x","sort","hightest_x","trendline_points","x1","y1","x2","y2","stroke","strokeWidth","Axis","node","refs","select","call","ref","LinearGraph","avain","avain1","gtrendsavain","kuntaAvain","haettu","trendsData","hakualku","hakuloppu","haepaiva","viikko","ekaPaiva","getDay","paiva","getTime","p","k","App","useState","setHakusana","asetettuHakusana","setAsetettuHakusana","thlData","setThlData","setKoronaData","laatikkoKorona","setLaatikkoKorona","laatikkoKorrelaatio","setLaatikkoKorrelaatio","scatterPlotData","setscatterPlotData","valittuDropDown","setValittuDropDown","sliderValue","setSliderValue","kartanFiltteri","setKartanFiltteri","gtrendsHakemassa","setGtrendsHakemassa","useEffect","ThlService","thl","initThlData","rajattuData","yl√§","ala","kunta","arvo","parseInt","isNaN","handleLaatikkoKoronaChange","haeGtrendsTulokset","GTrendsService","gtData","tulos","filtteri","karttafunktio","newValue","fluid","Row","Col","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1fe3303b.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport Nav from 'react-bootstrap/Nav'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Navigointi= () => {\n    return(\n    <Navbar className=\"Navbar\" bg=\"primary\" variant=\"light\">\n      <Navbar.Brand>Koronakorrelaatio</Navbar.Brand>\n    <Nav>\n      <Button className=\"nappi\" variant=\"primary\">Info</Button>\n    </Nav>\n    </Navbar>\n    )\n}\n\nexport default Navigointi","import React from 'react';\n\nconst Footer = () => (\n  <div className='footer'>\n    <p>Koronakorrelaatio √§pisk√§ devattu reactilla</p>\n    <p>&copy; Antti Heimonen, Maria Kangas, Konsta Kalliokoski ja Vilma Patama</p>\n  </div>\n)\n\nexport default Footer","import React, { useState } from 'react'\nimport '../App'\nimport '../App.css'\nimport TextField from '@material-ui/core/TextField';\n\nconst Haku = ({value, handleChange, handleKeyPress, hakemassa}) => {\n\n  return (\n    <div className = \"Haku\">\n      <TextField \n      id           = \"outlined-basic\" \n      label        = \"Kirjoita hakusana\" \n      variant      = \"outlined\"\n      className    = \"Hakukentta\"\n      size         = \"small\"\n      value        = {value} \n      onChange     = {handleChange}\n      type         = \"text\"\n      onKeyUp      = {handleKeyPress}\n      disabled     = {hakemassa}\n      autoFocus    = {true} />\n      </div>\n  )\n}\n\nexport default Haku","const eventBus = {\n\n  //Hakee eventin\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n\n  //Luo eventin\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n\n  //Poistaa eventin\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n  \nexport default eventBus;","import React from 'react'\n\nconst Popup = ({ feature }) => {\n  let popupContent;\n  if (feature.properties && feature.properties.name) {\n    popupContent = feature.properties.name;\n  }\n\n  return (\n    <div>\n      {popupContent}\n    </div>\n  );\n};\n\nexport default Popup","import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    // get color depending on population density value\n    const getColor = d => {\n      return d > 1000 ?  '#800026':\n      d > 300  ?  '#BD0026':\n      d > 150  ?  '#E31A1C':\n      d > 75   ?  '#FC4E2A':\n      d > 25   ?  '#FD8D3C':\n      d > 10   ?  '#FEB24C':\n      d > 4    ?  '#FED976':\n                  '#dcf1f2';\n    }  \n\n    const legend = L.control({ position: \"bottomright\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 4, 10, 25, 75, 150, 300, 1000];\n      let labels = [];\n      let from;\n      let to;\n\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n\n        labels.push(\n          '<i style=\"background:' +\n            getColor(from + 1) +\n            '\"></i> ' +\n            from +\n            (to ? \"&ndash;\" + to : \"+\")\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n}\n\nexport default withLeaflet(Legend);","import React, {useState, Component} from 'react'\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet'\nimport L from 'leaflet'\nimport eventBus from \"./EventBus\";\nimport ReactDOMServer from 'react-dom/server';\nimport Popup from \"./Popup\";\nimport Legend from \"./Legend\";\n\nlet kuntaRajat \t\t= require ('../data/kuntarajat-ok.json')\n//let maakuntaRajat = require ('../data/maakunnat.json')\nlet haettuM \t\t\t= 0;\n\nconst position = [65.505, 25]\nlet f = 1\n\n//Palauttaa tyylin geojsonia varten\nfunction style(feature) {\n\tlet color = f === 1 ? feature.properties.korona: \n\t\t\t\t\t\t\tf === 2 ? feature.properties.haku:\n\t\t\t\t\t\t\tfeature.properties.korona * (feature.properties.haku / 100)\n\n\n\treturn {\n\t\tweight:        1,\n\t\topacity:       5,\n\t\tcolor: '#1e1f1f',\n\t\tdashArray:    '',\n\t\tfillOpacity: 0.7,\n\t\tfillColor: getColor(color)\n\t};\n}\n\n//Palauttaa tietyn v√§rin d:n arvon perusteella\nfunction getColor(d) {\n\treturn  d > 1000 ?  '#800026':\n\t\t\t\t\td > 300  ?  '#BD0026':\n\t\t\t\t\td > 150  ?  '#E31A1C':\n\t\t\t\t\td > 75   ?  '#FC4E2A':\n\t\t\t\t\td > 25   ?  '#FD8D3C':\n\t\t\t\t\td > 10   ?  '#FEB24C':\n\t\t\t\t\td > 4    ?  '#FED976':\n\t\t\t\t\t\t\t\t\t\t\t'#dcf1f2';\n}\n\n//Poistaa highlightin\nfunction resetHighlight(e) {\n\tvar layer = e.target;\n\tlayer.setStyle({\n\t\tweight:        1,\n\t\topacity:       5,\n\t\tcolor: '#1e1f1f',\n\t\tdashArray:    '',\n\t\tfillOpacity: 0.7,\n\t});\n}\n\n\n\n//Korostaa tietyn layerin\nfunction highlightFeature(e) {\n\tvar layer = e.target;\n\tlayer.setStyle({\n\t\tweight:         4,\n\t\tcolor:     '#666',\n\t\tdashArray:     '',\n\t\tfillOpacity:  0.7\n\t});\n\tif (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n\t\tlayer.bringToFront();\n\t}\n}\n \nclass Kartta extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      tila: props\n\t\t}\n\t\tthis.onEachFeature = this.onEachFeature.bind(this);\n\t\tthis.clickFeature = this.clickFeature.bind(this);\n\t}\n\t\n\tonEachFeature (feature, layer){\n\t\tlayer.on({\n\t\t\tmouseover: highlightFeature,\n\t\t\tmouseout:  resetHighlight,\n\t\t\tclick:     this.clickFeature\n\t\t});\n\t\tconst popupContent = ReactDOMServer.renderToString(\n\t\t\t<Popup feature={feature} />\n\t\t);\n\t\tlayer.bindPopup(popupContent);\n\t\t\n\t}\n\t\n\t\n\t/*\n\tcomponentDidUpdate(){\n\t\tf = this.props.filtteri === f ? f : this.props.filtteri\n\t}\n\t*/\n\n\n\tclickFeature(e) {\n\t\t//Ottaa tietyn layerin k√§sittelyyn\n\t\tvar layer = e.target\n\t\tconsole.log (layer.feature.properties)\n\t\n\t\tvar data =  { \n\t\t\tid: \t\t layer.feature.properties.code,\n\t\t\tdensity: haettuM !== 0 ? layer.feature.properties.haku : \"Tee haku n√§hd√§ksesi trends-arvot\",\n\t\t\tkorona:  layer.feature.properties.korona,\n\t\t\tname:    layer.feature.properties.name\n\t\t}\t  \n\t\t//L√§hett√§√§ datan eventbusin avulla (laatikolle)\n\t\tthis.props.handleChange(layer.feature.properties.code)\n\t\teventBus.dispatch(\"kuntadata\", data);\n\t}\t\n\n  render(){\n\t\t\n\t\tfor (const feature of kuntaRajat.features){\n\t\t\tlet id = feature.properties.code\n\t\t\tthis.props.koronaData[id][\"data\"] === undefined ? feature.properties.korona = 0 : feature.properties.korona = this.props.koronaData[id][\"data\"]\n      \n  \n      haettuM = 0;\n      if(this.props.hakuData[id][\"data\"] !== undefined){\n\t\t\t\thaettuM = 1;\n\t\t\t\tfeature.properties.haku = this.props.hakuData[id][\"data\"]\n      }\t\n\t\t}\n\n    return (\n      <Map center={position} zoom={5}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors | Korona-data &copy; <a href=&quot;https://thl.fi/fi/tilastot-ja-data/aineistot-ja-palvelut/avoin-data/varmistetut-koronatapaukset-suomessa-covid-19-&quot;>THL</a>\"\n        />\n        <Legend />\n        <GeoJSON \n          data          = {kuntaRajat}\t\t\t\t\n          style         = {style}\n          onEachFeature = {this.onEachFeature}\n        />\n\t\t\t\t\n      </Map>\n    )\n  }\n}\n\nexport default Kartta\n","import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container';\nimport '../App.css'\nimport '../kartta/data/avain'\n\nclass Laatikko extends Component {\n  render() {\n    //Jos korrelaatiota ei ole laskettu t√§m√§ render√∂id√§√§n, muuten else\n    if(this.props.korrelaatio.teksti === \"\")\n    return (\n      <div className=\"laatikkoDiv\">\n      <Container className=\"Laatikko\">\n        <p className=\"laatikkoP\">\n          <b>Haettu hakusana:</b>  {this.props.sana                  === \"\" ? \"Ei hakua\"                         :this.props.sana} <br/>\n          <b>Kunta:</b>            {this.props.koronaLaatikko.nimi   === \"\" ? \"Klikkaa kuntaa n√§hd√§ksesi tiedot\" :this.props.koronaLaatikko.nimi} <br/>\n          <b>Trends-arvo:</b>      {this.props.koronaLaatikko.trends === \"\" ? \"Tee haku n√§hd√§ksesi trends-arvot\" :this.props.koronaLaatikko.trends} <br/>\n          <b>Koronatartuntoja:</b> {this.props.koronaLaatikko.korona === \"\" ? \"Klikkaa kuntaa n√§hd√§ksesi tiedot\" :this.props.koronaLaatikko.korona} <br/>\n        </p>\n      </Container>\n      </div>\n    ); else\n    console.log(this.props.korrelaatio.uskottavuus)\n    return (\n      <div className=\"laatikkoDiv\">\n      <Container className=\"Laatikko\">\n        <p className=\"laatikkoP\">\n        <b>Haettu hakusana:</b>  {this.props.sana                  === \"\" ? \"Ei hakua\"                         :this.props.sana} <br/>\n        <b>Kunta:</b>            {this.props.koronaLaatikko.nimi   === \"\" ? \"Klikkaa kuntaa n√§hd√§ksesi tiedot\" :this.props.koronaLaatikko.nimi} <br/>\n        <b>Trends-arvo:</b>      {this.props.koronaLaatikko.trends === \"\" ? \"Tee haku n√§hd√§ksesi trends-arvot\" :this.props.koronaLaatikko.trends} <br/>\n        <b>Koronatartuntoja:</b> {this.props.koronaLaatikko.korona === \"\" ? \"Klikkaa kuntaa n√§hd√§ksesi tiedot\" :this.props.koronaLaatikko.korona} <br/>\n        </p>\n        <p>\n        <b>Pearsonin korrelaatiokerroin:</b> {(\"\" + this.props.korrelaatio.data).slice(0,6)} <br/>\n        <b>Korrelaatio:</b>                  {this.props.korrelaatio.teksti} <br/>\n        Datassa oli {this.props.korrelaatio.uskottavuus} merkitsev√§√§ datapistett√§, joten {this.props.korrelaatio.uskottavuus < 10 ? \"se ei todenn√§k√∂isesti ole merkitsev√§ tulos\" : this.props.korrelaatio.uskottavuus < 25 ? \"se saattaa olla merkitsev√§ tulos \" : this.props.korrelaatio.uskottavuus < 50 ? \"se on mahdollisesti merkitsev√§ tulos\": \"se on todenn√§k√∂isesti merkitsev√§ tulos\"}\n        </p>\n        </Container>\n        </div>\n    ) \n  }\n}\n\nexport default Laatikko","import axios from 'axios'\n\n// Package.json tiedostossa mainitun proxyn ansiosta backendin \n// osoitetta ei tarvitse kokonaan\nconst thlDataUrl = '/thl/lokaalitesti'\n\nconst getData = async () => {\n  const vastaus = await axios.get(thlDataUrl)\n  //console.log(vastaus.data)\n  return (vastaus.data)\n}\n\n\nconst getDataEiAsync = () => {\n  const vastaus = axios.get(thlDataUrl)\n  //console.log(vastaus.data)\n  return (vastaus.data)\n}\n\nexport default { getData, getDataEiAsync }","import axios from 'axios'\n\nvar _               = require('lodash');\n// Pohjassa kaikilla kunnilla on valmiina arvo 0\nlet gtrendsDataPohja = require('./../data/gtrends-avain.json')\nconst palvelin = `/gtrends`\n\n// Hakee hakusanan trendin Suomen kunnista annetulta ajanv√§lilt√§.\n// P√§iv√§m√§√§r√§t ovat muotoa vuosi-kk-pp, esim. 2020-5-21  \n// Palauttaa datan muodossa:\n// {\n//   \"area005\": \"88\",\n//   \"area007\": \"100\",\n//   ...\n// }\n//\n// Jos hakuprosessi p√§√§ttyy virheeseen, niin palauttaa null\nconst getData = async (hakusana, alkupvm, loppupvm) => {\n  console.log(`Gtrends haku: hakusana ${hakusana}, alkupvm ${alkupvm}, loppupvm ${loppupvm}`);\n  let hakuUrl =  `${palvelin}?hakusana=${hakusana}&alkupvm=${alkupvm}&loppupvm=${loppupvm}`\n  // console.log(hakuUrl);\n\n  let timerStart = Date.now();\n  return await axios.get(hakuUrl).then(response => { \n    let timerStop = Date.now();\n    let duration = timerStop - timerStart;\n    console.log(`Gtrends haku: Vastauksen status ${response.status}, kesto ${duration} ms`);\n    let gtrendsData = _.cloneDeep(gtrendsDataPohja)\n    Object.assign(gtrendsData, response.data)\n    return gtrendsData\n  }).catch(error => {\n    console.log(`Virhe Gtrends datan hakemisessa!`);\n    console.log(error);\n    return null\n  })\n}\n\nexport default { getData }","function laskekorrelaatio(hakuData, koronaData){\n\n\t/*\n\tconsole.log(hakuData)\n\tconsole.log(koronaData)\n\t*/\n\tlet scatterData = []\n\t\n\tlet koronakeskihajontalaskuri = 0\n\tlet hakukeskihajontalaskuri   = 0\n\tlet koronakeskiarvolaskuri    = 0\n\tlet hakukeskiarvolaskuri \t\t\t= 0\n\t\n\tlet hakupituus   = 0\n\tlet koronapituus = 0\n\tlet uskottavuus = 0\n\n\tfor(var element in koronaData){\n\t\tkoronakeskiarvolaskuri += koronaData[\"\" + element][\"data\"]\n\t\tkoronapituus++\n\t\tlet solu = [hakuData[\"\" + element] , koronaData[\"\" + element][\"data\"]]\n\t\tif (solu[0] !== 0 && solu[1] !== 0) uskottavuus++\n\t\tif (!(solu[0] === 0 && solu[1] === 0))scatterData.push(solu)\n\t}\n\n\tconsole.log(scatterData)\n\n\tfor(element in hakuData){\n\t\thakukeskiarvolaskuri += hakuData[\"\" + element]\n\t\thakupituus++\n\t}\n\t\n\tlet hakukeskiarvo = hakukeskiarvolaskuri / hakupituus\n\tlet koronakeskiarvo = koronakeskiarvolaskuri / koronapituus\n\n\tfor(element in koronaData){\n\t\tkoronakeskihajontalaskuri += (koronaData[\"\" + element][\"data\"] - koronakeskiarvo) * (koronaData[\"\" + element][\"data\"] - koronakeskiarvo)\n\t}\n\tfor(element in hakuData){\n\t\thakukeskihajontalaskuri += (hakuData[\"\" + element] - hakukeskiarvo) * (hakuData[\"\" + element] - hakukeskiarvo)\n\t}\n\n\tlet hakuhajonta = Math.sqrt(hakukeskihajontalaskuri / hakupituus) \n\tlet koronahajonta = Math.sqrt(koronakeskihajontalaskuri / koronapituus) \n\tlet pearsonlaskuri = 0\n\n\tfor(var element in hakuData){\n\t\t\tpearsonlaskuri += (hakuData[\"\" + element] - hakukeskiarvo) * (koronaData[\"\" + element][\"data\"] - koronakeskiarvo) //* (helement.haku - hakukeskiarvo)\n\t}\n\t\n\tlet pearsonjakaja = (koronapituus * koronahajonta * hakuhajonta)\n\tlet pearson = pearsonjakaja !== 0 ? pearsonlaskuri / pearsonjakaja : 0\n\n\t/*\n\tconsole.log(koronakeskiarvo)\n\tconsole.log(koronapituus)\n\tconsole.log(koronahajonta)\n\tconsole.log(koronakeskihajontalaskuri)\n\tconsole.log(pearsonjakaja)\n\tconsole.log(pearson)\n\t*/\n\n\tlet data = {}\n\tdata.teksti = pearson > 0.7 || pearson < -0.7 ? \n\t\t\t\t\t\t\t\t\t\"muuttujien v√§lill√§ on selv√§ lineaarinen yhteys\" :\n\t\t\t\t\t\t\t\tpearson > 0.3 || pearson < -0.3 ? \n\t\t\t\t\t\t\t\t\t\"muuttujien v√§lill√§ on jonkin verran lineaarista yhteytt√§\" :\n\t\t\t\t\t\t\t\tpearson > 0.1 || pearson < -0.1 ? \n\t\t\t\t\t\t\t\t\t\"muuttujien v√§lill√§ ei ole juurikaan lineaarista yhteytt√§\":\n\t\t\t\t\t\t\t\t\t\"muuttujien v√§lill√§ ei ole lineaarista yhteytt√§\";\n\n\tdata.pearson = Math.abs(pearson) \n\tdata.scatterData = scatterData\n\t\n\tdata.uskottavuus = uskottavuus\n\tconsole.log(data)\n\treturn data\n}\n\nexport default laskekorrelaatio","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function RangeSlider(props) {\n\n  //Labelit slideriin\n  const marks = [\n    {\n      value: 4,\n      label: 'Tammi'\n    },\n    {\n      value: 12,\n      label: 'Maalis'\n    },\n    {\n      value: 20,\n      label: 'Touko'\n    },\n    {\n      value: 28,\n      label: 'Hein√§'\n    },\n    {\n      value: 36,\n      label: 'Elo'\n    },\n    {\n      value: 44,\n      label: 'Loka'\n    }\n  ];\n\n  var today = new Date();\n  //Hakee p√§iv√§n perusteella kuluvan viikon\n  today.getWeek = function () {\n    var onejan = new Date(this.getFullYear(), 0, 1);\n    var today = new Date(this.getFullYear(), this.getMonth(), this.getDate());\n    var dayOfYear = ((today - onejan + 86400000) / 86400000);\n    return Math.ceil(dayOfYear / 7)\n  };\n  var max = today.getWeek() - 1\n  const classes = useStyles();\n\n  if (max > 51) {\n    marks.push({\n      value: 52,\n      label: 'Joulu'\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Haettavat viikot koronatilastoille\n      </Typography>\n      <Slider\n        value={props.value}\n        onChange={props.handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n        min={5}\n        max={max}\n        marks={marks}\n      />\n    </div>\n  );\n}","import React, { useState } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport kuntaData from '../data/avain.json'\nimport 'semantic-ui-css/semantic.min.css'\nimport '../App.css'\n\nconst DropdownExampleSearchDropdown = ({valittuKunta, onChange}) => {\n  // Alustetaan k√§ytett√§v√§ array\n  const kuntaValinnat = []\n  \n  \n  // Luodaan silmukassa kuntaDatan pohjalta objekti jokaiselle kunnalle ja asetetaan se kuntaValinnat arrayn sis√§√§n\n  for(let i = 0; i < kuntaData.kunnat.length; i++){\n      const kuntaNimi = kuntaData.kunnat[i].nimi;\n      const kuntaKoodi = kuntaData.kunnat[i].koodi;\n      const iKunta = {key: kuntaKoodi, text: kuntaNimi, value: kuntaNimi}\n      kuntaValinnat.push(iKunta);\n  }\n  \n  \n\n  /**\n  // Asettaa valittuun kunnan jota k√§ytt√§j√§ on klikannut\n  const onChange = (event, vastaus) => {\n    const kunta = vastaus.value;\n    handleChange(kunta);\n  }\n\n   */\n  \n  // Tehd√§√§n dropdown\n  return(\n    <div className= 'dropdown'>\n    <Dropdown\n      button\n      className='icon'\n      floating\n      labeled\n      icon='write'\n      options={kuntaValinnat}\n      search\n      onChange={onChange}\n      // Asetetaan dropdownin tekstiksi kunnan nimi jota klikataan, kun kunta on undefined niin default teksti\n      text={valittuKunta === '' ? 'Valitse kunta' : '' + valittuKunta}\n    />\n    </div>\n  )\n}\n\nexport default DropdownExampleSearchDropdown\n","/* ScatterPlot-with-trendline.jsx\nRequires: react and d3 (ie  `npm install -S react d3`)\nSee the LinearGraph for an example of calling ScatterPlot\n*/\nimport React from \"react\"\nimport { scaleLinear, max, axisLeft, axisBottom, select } from \"d3\"\n\nfunction sortNumber(a, b) {\n  return a - b\n}\n\nexport default class ScatterPlot extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const margin = { top: 20, right: 15, bottom: 60, left: 60 }\n    const width = 800 - margin.left - margin.right\n    const height = 600 - margin.top - margin.bottom\n    const data = this.props.data\n\n    const x = scaleLinear()\n      .domain([\n        0,\n        max(data, function(d) {\n          return d[0]\n        })\n      ])\n      .range([0, width])\n\n    const y = scaleLinear()\n      .domain([\n        0,\n        max(data, function(d) {\n          return d[1]\n        })\n      ])\n      .range([height, 0])\n\n    return (\n      <div>\n        <h3> Scatter Plot with Trend Line </h3>\n        <svg\n          width={width + margin.right + margin.left}\n          height={height + margin.top + margin.bottom}\n          className=\"chart\"\n        >\n          <g\n            transform={\"translate(\" + margin.left + \",\" + margin.top + \")\"}\n            width={width}\n            height={height}\n            className=\"main\"\n          >\n            <RenderCircles data={data} scale={{ x, y }} />\n            <TrendLine data={data} scale={{ x, y }} />\n            <Axis\n              axis=\"x\"\n              transform={\"translate(0,\" + height + \")\"}\n              scale={axisBottom().scale(x)}\n            />\n            <Axis\n              axis=\"y\"\n              transform=\"translate(0,0)\"\n              scale={axisLeft().scale(y)}\n            />\n          </g>\n        </svg>\n      </div>\n    )\n  }\n}\n\nclass RenderCircles extends React.Component {\n  render() {\n    let renderCircles = this.props.data.map((coords, i) => (\n      <circle\n        cx={this.props.scale.x(coords[0])}\n        cy={this.props.scale.y(coords[1])}\n        r=\"8\"\n        style={{ fill: \"rgba(25, 158, 199, .9)\" }}\n        key={i}\n      />\n    ))\n    return <g>{renderCircles}</g>\n  }\n}\n\nclass TrendLine extends React.Component {\n  render() {\n    let x_coords = this.props.data.map(n => {\n      return n[0]\n    })\n    let y_coords = this.props.data.map(n => {\n      return n[1]\n    })\n    const trendline = linearRegression(y_coords, x_coords)\n\n    // Lowest and highest x coordinates to draw a plot line\n    const lowest_x = x_coords.sort(sortNumber)[0]\n    const hightest_x = x_coords.sort(sortNumber)[x_coords.length - 1]\n    const trendline_points = [\n      [lowest_x, trendline(lowest_x)],\n      [hightest_x, trendline(hightest_x)]\n    ]\n\n    return (\n      <line\n        x1={this.props.scale.x(trendline_points[0][0])}\n        y1={this.props.scale.y(trendline_points[0][1])}\n        x2={this.props.scale.x(trendline_points[1][0])}\n        y2={this.props.scale.y(trendline_points[1][1])}\n        style={{ stroke: \"black\", strokeWidth: \"2\" }}\n      />\n    )\n  }\n}\n\nclass Axis extends React.Component {\n  componentDidMount() {\n    const node = this.refs[this.props.axis]\n    select(node).call(this.props.scale)\n  }\n\n  render() {\n    return (\n      <g\n        className=\"main axis date\"\n        transform={this.props.transform}\n        ref={this.props.axis}\n      />\n    )\n  }\n}\n\nfunction linearRegression(y, x) {\n  var lr = {}\n  var n = y.length\n  var sum_x = 0\n  var sum_y = 0\n  var sum_xy = 0\n  var sum_xx = 0\n  var sum_yy = 0\n\n  for (var i = 0; i < y.length; i++) {\n    sum_x += x[i]\n    sum_y += y[i]\n    sum_xy += x[i] * y[i]\n    sum_xx += x[i] * x[i]\n    sum_yy += y[i] * y[i]\n  }\n\n  lr[\"slope\"] = (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x)\n  lr[\"intercept\"] = (sum_y - lr.slope * sum_x) / n\n  lr[\"r2\"] = Math.pow(\n    (n * sum_xy - sum_x * sum_y) /\n      Math.sqrt((n * sum_xx - sum_x * sum_x) * (n * sum_yy - sum_y * sum_y)),\n    2\n  )\n\n  return x => {\n    return lr.slope * x + lr.intercept\n  }\n}","import React, { useState} from \"react\"\nimport ScatterPlot from \"./ScatterPlot-with-trendline\"\n\nlet data = [\n  [0, 3],\n  [5, 13],\n  [10, 22],\n  [15, 36],\n  [20, 48],\n  [25, 59],\n  [30, 77],\n  [35, 85],\n  [40, 95],\n  [45, 105],\n  [50, 120],\n  [55, 150],\n  [60, 147],\n  [65, 168],\n  [70, 176],\n  [75, 188],\n  [80, 199],\n  [85, 213],\n  [90, 222],\n  [95, 236],\n  [100, 249]\n]\n\nexport default class LinearGraph extends React.Component {\n  constructor(props) {\n    super(props)\n    let arr = props.data[0]\n    console.log(props.data[0] === undefined)\n  }\n\n  render() {\n    if(this.props.data[0] !== undefined)return <ScatterPlot data={this.props.data} />;\n    else return (null)\n  }\n}","import React, { useState, useEffect, } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport Navigointi from './components/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Footer from './components/Footer'\nimport Haku from './components/Haku'\nimport Kartta from './components/Kartta'\nimport Laatikko from './components/Laatikko'\nimport ThlService from './services/thl'\nimport GTrendsService from './services/gtrends'\nimport laskekorrelaatio from './components/korrelaatiolaskin'\nimport RangeSlider from './components/Slider'\nimport Dropdown from './components/Dropdown'\nimport LinearGraph from './components/LinearGraph'\nimport { Navbar } from 'react-bootstrap'\n// import { data } from 'jquery'\n\n\nvar _               = require('lodash');\nlet avain           = require('./data/avain.json')\nlet avain1          = require('./data/area-avain.json')\nlet gtrendsavain    = require('./data/gtrends-avain.json')\nlet kuntaAvain      = require('./data/kuntakoodit.json')\nlet hakuData        = _.cloneDeep(avain)\n    hakuData.haettu = 0\nlet trendsData       = _.cloneDeep(gtrendsavain)\n// let koronaData      = _.cloneDeep(avain)\nlet hakualku        = \"2020-01-28\"\nlet hakuloppu       = \"2020-01-28\"\n\n//palauttaa viikon ensimm√§isen p√§iv√§n muodossa vuosi-kuukausi-p√§iv√§\nfunction haepaiva(viikko){\n  let vuosi = 2020\n  let ekaPaiva = new Date(2020, 0, 1).getDay();\n  let paiva    = new Date(\"Jan 01, \" + vuosi + \" 01:00:00\")\n  let d        = new Date( paiva.getTime() - (3600000 * 24 * (ekaPaiva - 1)) + 604800000 * (viikko - 1))\n  \n  let p        = d.getDate()\n  let k        = d.getMonth() + 1\n  k            = ('0' + k).slice(-2)\n  let v        = d.getFullYear()\n  return \"\" + v + \"-\" + k + \"-\" + p\n}\n\n\nfunction App() {\n  const [hakusana, setHakusana]\n    = useState('')\n  const [asetettuHakusana = \"\", setAsetettuHakusana] \n    = useState('')\n  // ThlData sis√§lt√§√§ backendilt√§ saadun datan. T√§t√§ ei saa muuttaa\n  const [thlData, setThlData]                        \n    = useState(null)\n\n  const [koronaData, setKoronaData]                        \n    = useState(null)\n\n  const [laatikkoKorona, setLaatikkoKorona]          \n    = useState({ \n      id: \t\t \"area005\",\n      trends:  \"\",\n      korona:  \"\",\n      nimi:    \"\"\n    }\n  )\n  const [laatikkoKorrelaatio, setLaatikkoKorrelaatio] \n    = useState({\n      teksti: \"\",\n      data:    0,\n      uskottavuus: 0,\n    }\n  )\n  const [scatterPlotData, setscatterPlotData]\n    = useState([])\n  \n  const [valittuDropDown, setValittuDropDown] \n    = useState('')\n  const [sliderValue, setSliderValue]                 \n    = useState([5, 44])\n  const [kartanFiltteri, setKartanFiltteri]\n    = useState(1)\n\n  const [gtrendsHakemassa, setGtrendsHakemassa] = useState(false)\n  \n\n  // Effect pyyt√§√§ THL-datan backendilt√§ sivun auettua ja asettaa\n  // sen thlData-tilaan. thlData on null, kunnes oikea data asetetaan.\n  useEffect(() => {\n    async function initThlData() {\n      const thl = await ThlService.getData()\n      setThlData(thl)\n      console.log(thl)\n    }\n    initThlData()\n  }, [])\n\n\n  const naytettavanDatanMuutos = () => {\n    console.log(\"thlData tai slider muuttunut\");\n\n    if(thlData === null )\n      return\n\n    let rajattuData = _.cloneDeep(avain1)\n\n    let [yl√§,  ala] = sliderValue\n    if  (yl√§ < ala){\n        [ala,  yl√§] = sliderValue\n    }  \n\n    for (const kunta in rajattuData){\n        rajattuData[kunta].data = 0\n        let id = \"\" + kunta\n\n        for (let i = ala; i <= yl√§; i++){\n            let viikko = \"\" + ('0' + i).slice(-2)\n            if(thlData[\"2020\"][viikko][id] !== undefined){\n              let arvo = parseInt(thlData[\"2020\"][viikko][id])\n              if(!isNaN(arvo))\n                rajattuData[kunta][\"data\"] += arvo\n            }\n        }\n    }\n    setKoronaData(rajattuData)\n  }\n\n  // Funktio naytettavanDatanMuutos suoritetaan aina, kun thlData tai sliderValue muuttuu\n  useEffect(naytettavanDatanMuutos, [thlData, sliderValue])\n\n\n  function handleDropDownChange (e, vastaus) {\n    setValittuDropDown(vastaus.value);\n    handleLaatikkoKoronaChange(kuntaAvain[vastaus.value][\"koodi\"])\n  }\n\n  //Handleri joka muuttaa laatikon arvoja \n  //Sy√∂tet√§√§n kartalle\n  const handleLaatikkoKoronaChange = (value) => {\n    var data;\n    \n    data = {\n      id: value,\n      trends: trendsData[value] !== undefined ? trendsData[value] : \"Tee haku n√§hd√§ksesi trends-arvot\",\n      korona: koronaData[value][\"data\"],\n      nimi: koronaData[value][\"kunta\"]\n    }\n    setLaatikkoKorona(data)\n  }\n\n  // Tarkkailee hakusanaan teht√§vi√§ muutoksia ja tallentaa ne valueen\n  const handleHakusanaChange = (e) => {\n    setHakusana(e.target.value);\n  }\n\n  //Handleri sliderille\n  const handleSliderChange = (event, newValue) => {\n    let [ala, yl√§] = newValue\n    //t√§√§ p√§tk√§ est√§√§ slideria menem√§st√§ p√§√§llekk√§in, jottei tapahdu kamalia\n    if (yl√§ - ala !== 0 )setSliderValue([ala,yl√§]);\n\n    handleLaatikkoKoronaChange (laatikkoKorona.id)\n  };\n\n  // Hakee Google Trendsin tulokset annetulle hakusanalle\n  const haeGtrendsTulokset = async () => {\n    setGtrendsHakemassa(true)\n    let [ala, yl√§] = sliderValue\n    hakualku = haepaiva(ala)\n    hakuloppu = haepaiva(yl√§)\n\n    GTrendsService.getData(hakusana, hakualku, hakuloppu).then(gtData => {\n      console.log(gtData)\n      setGtrendsHakemassa(false)\n      if (gtData === null){\n        // Gtrends-datan hakeminen ep√§onnistui\n        console.log(`Gtrends dataa ei voitu hakea!`);\n        return;\n      }\n      let tulos = laskekorrelaatio(gtData, koronaData)\n      trendsData = gtData\n      console.log(tulos)\n      setscatterPlotData(tulos.scatterData)\n      setKartanFiltteri(3)\n      setLaatikkoKorrelaatio({\n        teksti: tulos.teksti,\n        data: tulos.pearson,\n        uskottavuus: tulos.uskottavuus\n      })\n    })\n  }\n\n  // Kutsuu hae-funktiota jos ollaan painettu enteri√§\n  const handleEnterPress = (e) => {\n    if (e.key === 'Enter') {\n      setAsetettuHakusana(hakusana);\n      // console.log(hakusana);\n      console.log(asetettuHakusana);\n      haeGtrendsTulokset();\n    }\n  }\n\n\n  const karttafunktio = () => {\n    if(koronaData == null)\n     return\n    return (\n      <Kartta \n        koronaData     = {koronaData} \n        hakuData       = {trendsData} \n        handleChange   = {handleLaatikkoKoronaChange} \n        filtteri       = {kartanFiltteri} />\n    )\n  }\n\n\n  //Jos thldata ei ole tullut perille niin ei render√∂id√§ muuta kuin else\n  if(thlData !== null)\n    return (\n      <div className=\"App\">\n        <Navigointi/>\n      <div className=\"Flex\">\n        {karttafunktio()}\n        <RangeSlider \n          value          = {sliderValue} \n          handleChange   = {handleSliderChange}/>\n        <div className=\"hakuTiedot\">\n          <Container fluid>\n            <Row>\n              <Col>\n                <Dropdown\n                  valittuKunta   = {valittuDropDown}\n                  onChange       = {handleDropDownChange}\n                />\n              </Col>\n              <Col>\n                <Haku \n                value          = {hakusana} \n                handleChange   = {handleHakusanaChange} \n                handleKeyPress = {handleEnterPress}\n                hakemassa      = {gtrendsHakemassa}/>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <Laatikko \n          sana           = {asetettuHakusana} \n          koronaLaatikko = {laatikkoKorona}\n          korrelaatio    = {laatikkoKorrelaatio}/>\n        <Footer />\n        <LinearGraph \n          data           ={scatterPlotData}\n        />\n        </div>\n      </div>\n    );\n  else\n    return (\n      <div className=\"App\">\n        <p>Odota hetki kun sivu lataantuu</p>\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}