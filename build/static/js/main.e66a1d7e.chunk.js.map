{"version":3,"sources":["components/Footer.js","components/Haku.js","components/EventBus.js","components/Kartta.js","components/Laatikko.js","services/thlkasittely.js","services/thl.js","services/gtrends.js","components/korrelaatiolaskin.js","components/Slider.js","components/Dropdown.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Haku","value","handleChange","handleKeyPress","TextField","id","label","variant","onChange","type","onKeyUp","eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","data","dispatchEvent","CustomEvent","remove","removeEventListener","kuntaRajat","require","haettuM","position","style","feature","d","color","properties","korona","weight","opacity","dashArray","fillOpacity","fillColor","resetHighlight","target","setStyle","highlightFeature","layer","L","Browser","ie","opera","edge","bringToFront","Kartta","props","state","tila","onEachFeature","bind","clickFeature","mouseover","mouseout","click","this","console","log","code","density","haku","name","features","undefined","koronaData","hakuData","Map","center","zoom","TileLayer","url","attribution","GeoJSON","Component","Laatikko","korrelaatio","teksti","sana","koronaLaatikko","nimi","trends","slice","käsittele","sisään","ulos","raja","ylä","ala","element","i","viikko","parseInt","ThlKasittely","updateAndNotify","setState","käsiteltyData","haettuTHL","rajat","init","prevProps","notifyRequired","getData","a","axios","get","vastaus","getDataEiAsync","_","gtrendsDataPohja","hakusana","alkupvm","loppupvm","hakuUrl","then","response","gtrendsData","cloneDeep","Object","assign","laskekorrelaatio","koronakeskihajontalaskuri","hakukeskihajontalaskuri","koronakeskiarvolaskuri","hakukeskiarvolaskuri","hakupituus","koronapituus","hakukeskiarvo","koronakeskiarvo","hakuhajonta","Math","sqrt","koronahajonta","pearsonlaskuri","pearsonjakaja","pearson","abs","useStyles","makeStyles","root","width","valuetext","RangeSlider","marks","max","Date","getWeek","classes","push","Typography","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","min","prototype","onejan","getFullYear","dayOfYear","getMonth","getDate","ceil","DropdownExampleSearchDropdown","valittuKunta","kuntaValinnat","kuntaData","kunnat","length","kuntaNimi","iKunta","key","koodi","text","Dropdown","button","floating","labeled","icon","options","search","avain","avain1","kuntaAvain","haettu","hakuData1","koronaData1","hakualku","hakuloppu","haepaiva","ekaPaiva","getDay","paiva","getTime","p","k","App","useState","setHakusana","asetettuHakusana","setAsetettuHakusana","thlData","setThlData","laatikkoKorona","setLaatikkoKorona","laatikkoKorrelaatio","setLaatikkoKorrelaatio","valittuDropDown","setValittuDropDown","sliderValue","setSliderValue","kartanFiltteri","setKartanFiltteri","useEffect","ThlService","thl","initThlData","handleLaatikkoKoronaChange","haeGtrendsTulokset","floor","random","GTrendsService","gtData","tulos","filtteri","newValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e66a1d7e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => (\n  <div className='footer'>\n    <p>Koronakorrelaatio äpiskä devattu reactilla</p>\n    <p>&copy; Antti Heimonen, Maria Kangas, Konsta Kalliokoski ja Vilma Patama</p>\n  </div>\n)\n\nexport default Footer","import React, { useState } from 'react'\nimport '../App'\nimport '../App.css'\nimport TextField from '@material-ui/core/TextField';\n\nconst Haku = ({value, handleChange, handleKeyPress}) => {\n\n  return (\n    <div className = \"Haku\">\n      <TextField \n      id           = \"outlined-basic\" \n      label        = \"Kirjoita hakusana\" \n      variant      = \"outlined\"\n      className    = \"Hakukentta\"\n      value        = {value} \n      onChange     = {handleChange}\n      type         = \"text\"\n      onKeyUp      = {handleKeyPress}/>\n      </div>\n  )\n}\n\nexport default Haku","const eventBus = {\n\n  //Hakee eventin\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n\n  //Luo eventin\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n\n  //Poistaa eventin\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n  \nexport default eventBus;","import React, {useState, Component} from 'react'\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet'\nimport L from 'leaflet'\nimport eventBus from \"./EventBus\";\n\nlet kuntaRajat \t\t= require ('../data/kuntarajat-ok.json')\n//let maakuntaRajat = require ('../data/maakunnat.json')\nlet haettuM \t\t\t= 0;\n\nconst position = [65.505, 25]\nlet f = 1\n\n//Palauttaa tyylin geojsonia varten\nfunction style(feature) {\n\tlet color = f === 1 ? feature.properties.korona: \n\t\t\t\t\t\t\tf === 2 ? feature.properties.haku:\n\t\t\t\t\t\t\tfeature.properties.korona * (feature.properties.haku / 100)\n\n\n\treturn {\n\t\tweight:        1,\n\t\topacity:       5,\n\t\tcolor: '#1e1f1f',\n\t\tdashArray:    '',\n\t\tfillOpacity: 0.7,\n\t\tfillColor: getColor(color)\n\t};\n}\n\n//Palauttaa tietyn värin d:n arvon perusteella\nfunction getColor(d) {\n\treturn  d > 1000 ?  '#800026':\n\t\t\t\t\td > 300  ?  '#BD0026':\n\t\t\t\t\td > 150  ?  '#E31A1C':\n\t\t\t\t\td > 75   ?  '#FC4E2A':\n\t\t\t\t\td > 25   ?  '#FD8D3C':\n\t\t\t\t\td > 10   ?  '#FEB24C':\n\t\t\t\t\td > 4    ?  '#FED976':\n\t\t\t\t\t\t\t\t\t\t\t'#dcf1f2';\n}\n\n//Poistaa highlightin\nfunction resetHighlight(e) {\n\tvar layer = e.target;\n\tlayer.setStyle({\n\t\tweight:        1,\n\t\topacity:       5,\n\t\tcolor: '#1e1f1f',\n\t\tdashArray:    '',\n\t\tfillOpacity: 0.7,\n\t});\n}\n\n\n\n//Korostaa tietyn layerin\nfunction highlightFeature(e) {\n\tvar layer = e.target;\n\tlayer.setStyle({\n\t\tweight:         4,\n\t\tcolor:     '#666',\n\t\tdashArray:     '',\n\t\tfillOpacity:  0.7\n\t});\n\tif (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n\t\tlayer.bringToFront();\n\t}\n}\n \nclass Kartta extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      tila: props\n\t\t}\n\t\tthis.onEachFeature = this.onEachFeature.bind(this);\n\t\tthis.clickFeature = this.clickFeature.bind(this);\n\t}\n\t\n\tonEachFeature (feature, layer){\n\t\tlayer.on({\n\t\t\tmouseover: highlightFeature,\n\t\t\tmouseout:  resetHighlight,\n\t\t\tclick:     this.clickFeature\n\t\t});\n\t}\n\t\n\t\n\t/*\n\tcomponentDidUpdate(){\n\t\tf = this.props.filtteri === f ? f : this.props.filtteri\n\t}\n\t*/\n\n\n\tclickFeature(e) {\n\t\t//Ottaa tietyn layerin käsittelyyn\n\t\tvar layer = e.target\n\t\tconsole.log (layer.feature.properties)\n\t\n\t\tvar data =  { \n\t\t\tid: \t\t layer.feature.properties.code,\n\t\t\tdensity: haettuM !== 0 ? layer.feature.properties.haku : \"Tee haku nähdäksesi trends-arvot\",\n\t\t\tkorona:  layer.feature.properties.korona,\n\t\t\tname:    layer.feature.properties.name\n\t\t}\t  \n\t\t//Lähettää datan eventbusin avulla (laatikolle)\n\t\tthis.props.handleChange(layer.feature.properties.code)\n\t\teventBus.dispatch(\"kuntadata\", data);\n\t}\t\n\n  render(){\n\t\t\n\t\tfor (const feature of kuntaRajat.features){\n\t\t\tlet id = feature.properties.code\n\t\t\tthis.props.koronaData[id][\"data\"] === undefined ? feature.properties.korona = 0 : feature.properties.korona = this.props.koronaData[id][\"data\"]\n      \n  \n      haettuM = 0;\n      if(this.props.hakuData[id][\"data\"] !== undefined){\n\t\t\t\thaettuM = 1;\n\t\t\t\tfeature.properties.haku = this.props.hakuData[id][\"data\"]\n      }\t\n\t\t}\n\n    return (\n      <Map center={position} zoom={5}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors | Korona-data &copy; <a href=&quot;https://thl.fi/fi/tilastot-ja-data/aineistot-ja-palvelut/avoin-data/varmistetut-koronatapaukset-suomessa-covid-19-&quot;>THL</a>\"\n        />\n        \n        <GeoJSON \n          data          = {kuntaRajat}\t\t\t\t\n          style         = {style}\n          onEachFeature = {this.onEachFeature}\n        />\n      </Map>\n    )\n  }\n}\n\nexport default Kartta\n","import React, { Component } from 'react'\nimport '../App.css'\nimport '../kartta/data/avain'\n\nclass Laatikko extends Component {\n  render() {\n    //Jos korrelaatiota ei ole laskettu tämä renderöidään, muuten else\n    if(this.props.korrelaatio.teksti === \"\")\n    return (\n      <div className=\"Laatikko\">\n        <p>\n          Haettu hakusana:  {this.props.sana                  === \"\" ? \"Ei hakua\"                         :this.props.sana} <br/>\n          Kunta:            {this.props.koronaLaatikko.nimi   === \"\" ? \"Klikkaa kuntaa nähdäksesi tiedot\" :this.props.koronaLaatikko.nimi} <br/>\n          Trends-arvo:      {this.props.koronaLaatikko.trends === \"\" ? \"Tee haku nähdäksesi trends-arvot\" :this.props.koronaLaatikko.trends} <br/>\n          Koronatartuntoja: {this.props.koronaLaatikko.korona === \"\" ? \"Klikkaa kuntaa nähdäksesi tiedot\" :this.props.koronaLaatikko.korona} <br/>\n        </p>\n      </div>\n    ); else\n    return (\n      <div className=\"Laatikko\">\n        <p>\n        Haettu hakusana:  {this.props.sana                  === \"\" ? \"Ei hakua\"                         :this.props.sana} <br/>\n        Kunta:            {this.props.koronaLaatikko.nimi   === \"\" ? \"Klikkaa kuntaa nähdäksesi tiedot\" :this.props.koronaLaatikko.nimi} <br/>\n        Trends-arvo:      {this.props.koronaLaatikko.trends === \"\" ? \"Tee haku nähdäksesi trends-arvot\" :this.props.koronaLaatikko.trends} <br/>\n        Koronatartuntoja: {this.props.koronaLaatikko.korona === \"\" ? \"Klikkaa kuntaa nähdäksesi tiedot\" :this.props.koronaLaatikko.korona} <br/>\n        </p>\n        <p>\n        Pearsonin korrelaatiokerroin: {(\"\" + this.props.korrelaatio.data).slice(0,6)} <br/>\n        Korrelaatio:                  {this.props.korrelaatio.teksti} \n        </p>\n        </div>\n    ) \n  }\n}\n\nexport default Laatikko","import { Component } from 'react'\nvar vanhatRajat;\n\n\n\nfunction käsittele(sisään, ulos, raja){\n    let [ylä,  ala] = raja\n    if  (ylä < ala){\n        [ala,  ylä] = raja\n    }  \n\n    for (const element in ulos){\n        ulos[element].data = 0\n        var id = \"\" + element\n\n        for (var i = ala; i < ylä + 1; i++){\n            var viikko = \"\" + ('0' + i).slice(-2)\n            if(sisään[\"2020\"][viikko][id] !== undefined){\n              if (sisään[\"2020\"][viikko][id] !== 0)     \n              ulos[element][\"data\"] += parseInt(sisään[\"2020\"][viikko][id]) \n            }\n        }\n    }\n    return ulos\n}\n\nclass ThlKasittely extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            haettuTHL: \"\",\n            käsiteltyData: props.käsiteltyData,\n            rajat: props.rajat,\n            init: 0           \n        };\n\n        vanhatRajat = this.state.rajat\n    }\n\n    componentDidMount() {\n        if(this.props.haettuTHL !== null){\n            this.setState({haettuTHL: this.props.haettuTHL})\n        }\n    }\n\n    updateAndNotify = () => {\n        this.setState({\n            käsiteltyData: käsittele(this.state.haettuTHL, this.state.käsiteltyData, this.state.rajat)\n        })  \n    }\n\n    componentDidUpdate(prevProps){\n        if(this.state.init=== 0){\n            this.setState({\n                init: 1\n            });\n            this.updateAndNotify()\n        }\n        if (prevProps.rajat !== this.props.rajat){\n            this.updateAndNotify()\n            this.setState({\n                rajat: this.props.rajat\n            })\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps) {\n        return { notifyRequired: prevProps.rajat !== this.props.rajat };\n    }\n    \n    render(){\n        \n        return (null)\n    }\n}\n\nexport default ThlKasittely","import axios from 'axios'\n\n// Package.json tiedostossa mainitun proxyn ansiosta backendin \n// osoitetta ei tarvitse kokonaan\nconst thlDataUrl = '/thl/thldata'\n\nconst getData = async () => {\n  const vastaus = await axios.get(thlDataUrl)\n  //console.log(vastaus.data)\n  return (vastaus.data)\n}\n\n\nconst getDataEiAsync = () => {\n  const vastaus = axios.get(thlDataUrl)\n  //console.log(vastaus.data)\n  return (vastaus.data)\n}\n\nexport default { getData, getDataEiAsync }","import axios from 'axios'\n\nvar _               = require('lodash');\n// Pohjassa kaikilla kunnilla on valmiina arvo 0\nlet gtrendsDataPohja = require('./../data/gtrends-avain.json')\nconst palvelin = `/gtrends`\n\n// Hakee hakusanan trendin Suomen kunnista annetulta ajanväliltä.\n// Päivämäärät ovat muotoa vuosi-kk-pp, esim. 2020-5-21  \nconst getData = async (hakusana, alkupvm, loppupvm) => {\n  console.log(`Gtrends haku: hakusana ${hakusana}, alkupvm ${alkupvm}, loppupvm ${loppupvm}`);\n  let hakuUrl =  `${palvelin}?hakusana=${hakusana}&alkupvm=${alkupvm}&loppupvm=${loppupvm}`\n  // console.log(hakuUrl);\n\n  return await axios.get(hakuUrl).then(response => { \n    let gtrendsData = _.cloneDeep(gtrendsDataPohja)\n    Object.assign(gtrendsData, response.data)\n    return gtrendsData\n  })\n}\n\nexport default { getData }","function laskekorrelaatio(hakuData, koronaData){\n\n\t/*\n\tconsole.log(hakuData)\n\tconsole.log(koronaData)\n\t*/\n\t\n\tlet koronakeskihajontalaskuri = 0\n\tlet hakukeskihajontalaskuri   = 0\n\tlet koronakeskiarvolaskuri    = 0\n\tlet hakukeskiarvolaskuri \t\t\t= 0\n\t\n\tlet hakupituus   = 0\n\tlet koronapituus = 0\n\n\tfor(var element in koronaData){\n\t\tkoronakeskiarvolaskuri += koronaData[\"\" + element][\"data\"]\n\t\tkoronapituus++\n\t}\n\tfor(element in hakuData){\n\t\thakukeskiarvolaskuri += hakuData[\"\" + element]\n\t\thakupituus++\n\t}\n\t\n\tlet hakukeskiarvo = hakukeskiarvolaskuri / hakupituus\n\tlet koronakeskiarvo = koronakeskiarvolaskuri / koronapituus\n\n\tfor(element in koronaData){\n\t\tkoronakeskihajontalaskuri += (koronaData[\"\" + element][\"data\"] - koronakeskiarvo) * (koronaData[\"\" + element][\"data\"] - koronakeskiarvo)\n\t}\n\tfor(element in hakuData){\n\t\thakukeskihajontalaskuri += (hakuData[\"\" + element] - hakukeskiarvo) * (hakuData[\"\" + element] - hakukeskiarvo)\n\t}\n\n\tlet hakuhajonta = Math.sqrt(hakukeskihajontalaskuri / hakupituus) \n\tlet koronahajonta = Math.sqrt(koronakeskihajontalaskuri / koronapituus) \n\tlet pearsonlaskuri = 0\n\n\tfor(var element in hakuData){\n\t\t\tpearsonlaskuri += (hakuData[\"\" + element] - hakukeskiarvo) * (koronaData[\"\" + element][\"data\"] - koronakeskiarvo) //* (helement.haku - hakukeskiarvo)\n\t}\n\t\n\tlet pearsonjakaja = (koronapituus * koronahajonta * hakuhajonta)\n\tlet pearson = pearsonjakaja !== 0 ? pearsonlaskuri / pearsonjakaja : 0\n\n\t/*\n\tconsole.log(koronakeskiarvo)\n\tconsole.log(koronapituus)\n\tconsole.log(koronahajonta)\n\tconsole.log(koronakeskihajontalaskuri)\n\tconsole.log(pearsonjakaja)\n\tconsole.log(pearson)\n\t*/\n\n\tlet data = {}\n\tdata.teksti = pearson > 0.7 || pearson < -0.7 ? \n\t\t\t\t\t\t\t\t\t\"muuttujien välillä on selvä lineaarinen yhteys\" :\n\t\t\t\t\t\t\t\tpearson > 0.3 || pearson < -0.3 ? \n\t\t\t\t\t\t\t\t\t\"muuttujien välillä on jonkin verran lineaarista yhteyttä\" :\n\t\t\t\t\t\t\t\tpearson > 0.1 || pearson < -0.1 ? \n\t\t\t\t\t\t\t\t\t\"muuttujien välillä ei ole juurikaan lineaarista yhteyttä\":\n\t\t\t\t\t\t\t\t\t\"muuttujien välillä ei ole lineaarista yhteyttä\";\n\n\tdata.pearson = Math.abs(pearson) \n\treturn data\n}\n\nexport default laskekorrelaatio","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\n//Hakee päivän perusteella kuluvan viikon\nDate.prototype.getWeek = function() {\n  var onejan    = new Date(this.getFullYear(),0,1);\n  var today     = new Date(this.getFullYear(),this.getMonth(),this.getDate());\n  var dayOfYear = ((today - onejan + 86400000)/86400000);\n  return Math.ceil(dayOfYear/7)\n};\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function RangeSlider(props) {\n\n  //Labelit slideriin\n  const marks = [\n    {\n      value: 4,\n      label:'Tammi'\n    },\n    {\n      value: 12,\n      label:'Maalis'\n    },\n    {\n      value: 20,\n      label:'Touko'\n    },\n    {\n      value: 28,\n      label:'Heinä'\n    },\n    {\n      value: 36,\n      label:'Elo'\n    },\n    {\n      value: 44,\n      label:'Loka'\n    }\n  ];\n\n  var today     = new Date();\n  var max       = today.getWeek() - 1\n  const classes = useStyles();\n\n  if (max > 51){\n    marks.push({\n      value: 52,\n      label: 'Joulu'\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Haettavat viikot koronatilastoille\n      </Typography>\n      <Slider\n        value             = {props.value}\n        onChange          = {props.handleChange}\n        valueLabelDisplay = \"auto\"\n        aria-labelledby   = \"range-slider\"\n        getAriaValueText  = {valuetext}\n        min               = {5}\n        max               = {max}\n        marks             = {marks}\n      />\n    </div>\n  );\n}","import React, { useState } from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport kuntaData from '../data/avain.json'\nimport 'semantic-ui-css/semantic.min.css'\nimport '../App.css'\n\nconst DropdownExampleSearchDropdown = ({valittuKunta, onChange}) => {\n  // Alustetaan käytettävä array\n  const kuntaValinnat = []\n  \n  \n  // Luodaan silmukassa kuntaDatan pohjalta objekti jokaiselle kunnalle ja asetetaan se kuntaValinnat arrayn sisään\n  for(let i = 0; i < kuntaData.kunnat.length; i++){\n      const kuntaNimi = kuntaData.kunnat[i].nimi;\n      const kuntaKoodi = kuntaData.kunnat[i].koodi;\n      const iKunta = {key: kuntaKoodi, text: kuntaNimi, value: kuntaNimi}\n      kuntaValinnat.push(iKunta);\n  }\n  \n  \n\n  /**\n  // Asettaa valittuun kunnan jota käyttäjä on klikannut\n  const onChange = (event, vastaus) => {\n    const kunta = vastaus.value;\n    handleChange(kunta);\n  }\n\n   */\n  \n  // Tehdään dropdown\n  return(\n    <div className= 'dropdown'>\n    <Dropdown\n      button\n      className='icon'\n      floating\n      labeled\n      icon='write'\n      options={kuntaValinnat}\n      search\n      onChange={onChange}\n      // Asetetaan dropdownin tekstiksi kunnan nimi jota klikataan, kun kunta on undefined niin default teksti\n      text={valittuKunta === '' ? 'Valitse kunta' : '' + valittuKunta}\n    />\n    </div>\n  )\n}\n\nexport default DropdownExampleSearchDropdown\n","import React, { useState, useEffect, } from 'react'\nimport axios from 'axios'\nimport Footer from './components/Footer'\nimport Haku from './components/Haku'\nimport Kartta from './components/Kartta'\nimport Laatikko from './components/Laatikko'\nimport ThlKasittely from './services/thlkasittely'\nimport ThlService from './services/thl'\nimport GTrendsService from './services/gtrends'\nimport laskekorrelaatio from './components/korrelaatiolaskin'\nimport RangeSlider from './components/Slider'\nimport Dropdown from './components/Dropdown'\nlet gtrendsDataPohja = require('./data/gtrends-avain.json')\n\n\nvar _               = require('lodash');\nlet avain           = require('./data/avain.json')\nlet avain1          = require('./data/area-avain.json')\nlet kuntaAvain      = require('./data/kuntakoodit.json')\nlet hakuData        = _.cloneDeep(avain)\n    hakuData.haettu = 0\nlet hakuData1       = _.cloneDeep(avain1)\nlet koronaData      = _.cloneDeep(avain)\nlet koronaData1     = _.cloneDeep(avain1)\nlet hakualku        = \"2020-01-28\"\nlet hakuloppu       = \"2020-01-28\"\n\n//palauttaa viikon ensimmäisen päivän muodossa vuosi-kuukausi-päivä\nfunction haepaiva(viikko){\n  let vuosi = 2020\n  let ekaPaiva = new Date(2020, 0, 1).getDay();\n  let paiva    = new Date(\"Jan 01, \" + vuosi + \" 01:00:00\")\n  let d        = new Date( paiva.getTime() - (3600000 * 24 * (ekaPaiva - 1)) + 604800000 * (viikko - 1))\n  \n  let p        = d.getDate()\n  let k        = d.getMonth() + 1\n  k            = ('0' + k).slice(-2)\n  let v        = d.getFullYear()\n  return \"\" + v + \"-\" + k + \"-\" + p\n}\n\n\nfunction App() {\n  const [hakusana, setHakusana]\n    = useState('')\n  const [asetettuHakusana = \"\", setAsetettuHakusana] \n    = useState('')\n  // ThlData sisältää backendiltä saadun datan. Tätä ei saa muuttaa\n  const [thlData, setThlData]                        \n    = useState(null)\n  const [laatikkoKorona, setLaatikkoKorona]          \n    = useState({ \n      id: \t\t \"area005\",\n      trends:  \"\",\n      korona:  \"\",\n      nimi:    \"\"\n    }\n  )\n  const [laatikkoKorrelaatio, setLaatikkoKorrelaatio] \n    = useState({\n      teksti: \"\",\n      data:    0,\n    }\n  )\n\n  const [valittuDropDown, setValittuDropDown] = \n  useState('')\n  const [sliderValue, setSliderValue]                 \n    = useState([5, 6])\n  const [kartanFiltteri, setKartanFiltteri]\n    = useState(1)\n  \n\n  // Effect pyytää THL-datan backendiltä sivun auettua ja \n  // asettaa sen thlData-tilaan.\n  // Eli tilaksi asetetaan ensiksi []. \n  useEffect(() => {\n    async function initThlData() {\n      const thl = await ThlService.getData()\n      setThlData(thl)\n      console.log(thl)\n    }\n    initThlData()\n  }, [])\n\n  function handleDropDownChange (e, vastaus) {\n    setValittuDropDown(vastaus.value);\n    handleLaatikkoKoronaChange(kuntaAvain[vastaus.value][\"koodi\"])\n  }\n\n  //Handleri joka muuttaa laatikon arvoja \n  //Syötetään kartalle\n  const handleLaatikkoKoronaChange = (value) => {\n    var data;\n    \n    data = {\n      id: value,\n      trends: hakuData1[value][\"data\"] !== undefined ? hakuData1[value][\"data\"] : \"Tee haku nähdäksesi trends-arvot\",\n      korona: koronaData1[value][\"data\"],\n      nimi: koronaData1[value][\"kunta\"]\n    }\n    setLaatikkoKorona(data)\n  }\n\n  // Tarkkailee hakusanaan tehtäviä muutoksia ja tallentaa ne valueen\n  const handleHakusanaChange = (e) => {\n    setHakusana(e.target.value);\n  }\n\n  //Handleri sliderille\n  const handleSliderChange = (event, newValue) => {\n    let [ala, ylä] = newValue\n    //tää pätkä estää slideria menemästä päällekkäin, jottei tapahdu kamalia\n    if (ylä - ala !== 0 )setSliderValue([ala,ylä]);\n\n    handleLaatikkoKoronaChange (laatikkoKorona.id)\n  };\n\n  // Hakee Google Trendsin tulokset annetulle hakusanalle\n  const haeGtrendsTulokset = async () => {\n    for (const element in hakuData1) {\n      hakuData1[element] = Math.floor(Math.random() * 100);\n    }\n    console.log(hakuData1);\n    let [ala, ylä] = sliderValue\n    hakualku = haepaiva(ala)\n    hakuloppu = haepaiva(ylä)\n\n    GTrendsService.getData(hakusana, hakualku, hakuloppu).then(gtData => {\n      console.log(gtData)\n      let tulos = laskekorrelaatio(gtData, koronaData1)\n      console.log(tulos)\n      setKartanFiltteri(3)\n      setLaatikkoKorrelaatio({\n        teksti: tulos.teksti,\n        data: tulos.pearson\n      })\n    })\n  }\n\n  // Kutsuu hae-funktiota jos ollaan painettu enteriä\n  const handleEnterPress = (e) => {\n    if (e.key === 'Enter') {\n      setAsetettuHakusana(hakusana);\n      // console.log(hakusana);\n      console.log(asetettuHakusana);\n      haeGtrendsTulokset();\n    }\n  }\n\n  //Jos thldata ei ole tullut perille niin ei renderöidä muuta kuin else\n  if(thlData !== null)\n    return (\n      <div className=\"App\">\n        <Kartta \n          koronaData     = {koronaData1} \n          hakuData       = {hakuData1} \n          handleChange   = {handleLaatikkoKoronaChange} \n          filtteri       = {kartanFiltteri} />\n        <Haku \n          value          = {hakusana} \n          handleChange   = {handleHakusanaChange} \n          handleKeyPress = {handleEnterPress}/>\n        <Dropdown\n          valittuKunta   = {valittuDropDown}\n          onChange       = {handleDropDownChange}\n        />\n        <Laatikko \n          sana           = {asetettuHakusana} \n          koronaLaatikko = {laatikkoKorona}\n          korrelaatio    = {laatikkoKorrelaatio}/>\n        <RangeSlider \n          value          = {sliderValue} \n          handleChange   = {handleSliderChange}/>\n        <Footer />\n        <ThlKasittely\n          haettuTHL      = {thlData}\n          käsiteltyData  = {koronaData1}\n          rajat          = {sliderValue}\n        />\n      </div>\n    );\n  else\n    return (\n      <div className=\"App\">\n        <p>Odota hetki kun sivu lataantuu</p>\n      </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}