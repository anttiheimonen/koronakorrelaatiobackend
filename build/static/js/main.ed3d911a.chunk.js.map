{"version":3,"sources":["components/Footer.js","components/Haku.js","components/EventBus.js","components/Kartta.js","components/Laatikko.js","services/thlkasittely.js","services/thl.js","services/gtrends.js","components/korrelaatiolaskin.js","components/Slider.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Haku","value","handleChange","handleKeyPress","onChange","type","placeholder","onKeyUp","eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","data","dispatchEvent","CustomEvent","remove","removeEventListener","kuntaRajat","require","haettuM","position","style","feature","d","kerroin","properties","haku","weight","opacity","color","dashArray","fillOpacity","fillColor","korona","resetHighlight","target","setStyle","clickFeature","layer","console","log","id","code","density","name","onEachFeature","mouseover","highlightFeature","mouseout","click","L","Browser","ie","opera","edge","bringToFront","Kartta","props","state","tila","features","this","koronaData","kunnat","element","koodi","undefined","hakuData","haettu","element1","Map","center","zoom","TileLayer","url","attribution","GeoJSON","Component","Laatikko","korrelaatio","korrelaatiokerroin","kaupunki","trends","setState","teksti","pearson","sana","käsittele","sisään","ulos","raja","ylä","ala","i","viikko","slice","parseInt","ThlKasittely","updateAndNotify","käsiteltyData","haettuTHL","rajat","init","prevProps","notifyRequired","getData","a","axios","get","vastaus","getDataEiAsync","hakusana","laskekorrelaatio","koronakeskihajontalaskuri","hakukeskihajontalaskuri","koronakeskiarvolaskuri","hakukeskiarvolaskuri","hakupituus","length","koronapituus","hakukeskiarvo","koronakeskiarvo","hakuhajonta","Math","sqrt","koronahajonta","pearsonlaskuri","helement","nimi","pearsonjakaja","useStyles","makeStyles","root","width","valuetext","RangeSlider","marks","label","max","Date","getWeek","classes","push","Typography","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","getAriaValueText","min","prototype","onejan","getFullYear","dayOfYear","getMonth","getDate","ceil","_","avain","cloneDeep","App","useState","setHakusana","asetettuHakusana","setAsetettuHakusana","thlData","setThlData","sliderValue","setSliderValue","setRajat","useEffect","ThlService","thl","initThlData","key","floor","random","hakuTulos","GTrendsService","hae","tiheys","tartuntoja","newValue","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ed3d911a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => (\n  <div className='footer'>\n    <p>Koronakorrelaatio äpiskä devattu reactilla</p>\n    <p>&copy; Antti Heimonen, Maria Kangas, Konsta Kalliokoski ja Vilma Patama</p>\n  </div>\n)\n\nexport default Footer","import React, { useState } from 'react'\nimport '../App'\nimport '../App.css'\n\nconst Haku = ({value, handleChange, handleKeyPress}) => {\n\n  return (\n    <div className = \"Haku\">\n      <input \n      className    = \"Hakukentta\"\n      value        = {value} \n      onChange     = {handleChange}\n      type         = \"text\" \n      placeholder  = \"Kirjoita hakusana\"\n      onKeyUp      = {handleKeyPress}/>\n    </div>\n  )\n}\n\nexport default Haku","const eventBus = {\n\n  //Hakee eventin\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n\n  //Luo eventin\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n\n  //Poistaa eventin\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n  \nexport default eventBus;","import React, {useState, Component} from 'react'\nimport { Map, TileLayer, GeoJSON } from 'react-leaflet'\nimport L from 'leaflet'\nimport eventBus from \"./EventBus\";\n\nlet kuntaRajat \t\t= require ('../data/kuntarajat-ok.json')\n//let maakuntaRajat = require ('../data/maakunnat.json')\nlet haettuM \t\t\t= 0;\n\nconst position = [65.505, 25]\n\n//Palauttaa tyylin geojsonia varten\nfunction style(feature) {\n\tlet kerroin = 1;\n\tif (haettuM !== 0){\n\t\tkerroin = feature.properties.haku / 100\n\t}\n\n\treturn {\n\t\tweight:        1,\n\t\topacity:       5,\n\t\tcolor: '#1e1f1f',\n\t\tdashArray:    '',\n\t\tfillOpacity: 0.7,\n\t\tfillColor: getColor(feature.properties.korona * kerroin)\n\t};\n}\n\n//Palauttaa tietyn värin d:n arvon perusteella\nfunction getColor(d) {\n\treturn  d > 1000 ?  '#800026':\n\t\t\t\t\td > 300  ?  '#BD0026':\n\t\t\t\t\td > 150  ?  '#E31A1C':\n\t\t\t\t\td > 75   ?  '#FC4E2A':\n\t\t\t\t\td > 25   ?  '#FD8D3C':\n\t\t\t\t\td > 10   ?  '#FEB24C':\n\t\t\t\t\td > 4    ?  '#FED976':\n\t\t\t\t\t\t\t\t\t\t\t'#dcf1f2';\n}\n\n//Poistaa highlightin\nfunction resetHighlight(e) {\n\tvar layer = e.target;\n\tlayer.setStyle({\n\t\tweight:        1,\n\t\topacity:       5,\n\t\tcolor: '#1e1f1f',\n\t\tdashArray:    '',\n\t\tfillOpacity: 0.7,\n\t});\n}\n\n//Klikkaamalla tapahtuu tämä\nfunction clickFeature(e) {\n\t//Ottaa tietyn layerin käsittelyyn\n\tvar layer = e.target\n\tconsole.log (layer.feature.properties)\n\n\tvar data =  { \n\t\tid: \t\t layer.feature.properties.code,\n\t\tdensity: haettuM !== 0 ? layer.feature.properties.haku : \"Tee haku nähdäksesi trends-arvot\",\n\t\tkorona:  layer.feature.properties.korona,\n\t\tname:    layer.feature.properties.name\n\t}\t  \n\t//Lähettää datan eventbusin avulla (laatikolle)\n\teventBus.dispatch(\"kuntadata\", data);\n}\n\n//Asettaa oikeat eventit layereille\nfunction onEachFeature(feature, layer) {\n\tlayer.on({\n\t\tmouseover: highlightFeature,\n\t\tmouseout:  resetHighlight,\n\t\tclick:     clickFeature\n\t});\n}\n\n//Korostaa tietyn layerin\nfunction highlightFeature(e) {\n\tvar layer = e.target;\n\tlayer.setStyle({\n\t\tweight:         4,\n\t\tcolor:     '#666',\n\t\tdashArray:     '',\n\t\tfillOpacity:  0.7\n\t});\n\tif (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n\t\tlayer.bringToFront();\n\t}\n}\n \n\nclass Kartta extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      tila: props\n    }\n  }\n\n\n  render(){\n    \n    for (const feature of kuntaRajat.features){\n      for(const element of this.props.koronaData.kunnat){\n        if(feature.properties.code === element.koodi){\n          feature.properties.korona = (element.data !== undefined ? element.data : 0)\n        }\n      }\n  \n      haettuM = 0;\n      if(this.props.hakuData.haettu !== 0){\n        haettuM = 1;\n        for(const element1 of this.props.hakuData.kunnat){\n          if(feature.properties.code === element1.koodi){\n            feature.properties.haku = element1.haku\n          }\n        }\n      }\t\n\t\t}\n\n    return (\n      <Map center={position} zoom={5}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors | Korona-data &copy; <a href=&quot;https://thl.fi/fi/tilastot-ja-data/aineistot-ja-palvelut/avoin-data/varmistetut-koronatapaukset-suomessa-covid-19-&quot;>THL</a>\"\n        />\n        \n        <GeoJSON \n          data          = {kuntaRajat}\t\t\t\t\n          style         = {style}\n          onEachFeature = {onEachFeature}\n        />\n      </Map>\n    )\n  }\n}\n\nexport default Kartta\n","import { data } from 'jquery';\nimport React, { Component } from 'react'\nimport '../App.css'\nimport '../kartta/data/avain'\nimport eventBus from \"./EventBus\";\n\nclass Laatikko extends Component {\n  constructor() {\n    super();\n    this.state = {\n      korrelaatio:        \"\",\n      korrelaatiokerroin: \"\",\n      kaupunki:           \"\",\n      trends:             \"\",\n      korona:             \"\"\n    };\n  }\n\n  //Tapahtumakäsittelijä joka tarkastelee tapahtuuko tietty event\n  componentDidMount() {\n    eventBus.on(\"kuntadata\", (data) =>\n      this.setState({ \n        kaupunki: data.name, \n        trends: data.density,\n        korona: data.korona\n      })\n    );\n    eventBus.on(\"korrelaatiodata\",(data) =>\n      this.setState({\n        korrelaatio: data.teksti,\n        korrelaatiokerroin: data.pearson\n      })\n    );\n  }\n\n  //Kun event loppuu, tapahtuma poistetaan jottei tapahdu mitään jännää\n  componentWillUnmount() {\n    eventBus.remove(\"kuntadata\")\n    eventBus.remove(\"korrelaatiodata\")\n  }\n\n  render() {\n    return (\n      <div className=\"Laatikko\">\n        <p>\n          Haettu hakusana:  {this.props.sana     === \"\" ? \"Ei hakua\"                         :this.props.sana}     <br/>\n          Kunta:            {this.state.kaupunki === \"\" ? \"Klikkaa kuntaa nähdäksesi tiedot\" :this.state.kaupunki} <br/>\n          Trends-arvo:      {this.state.trends   === \"\" ? \"Tee haku nähdäksesi trends-arvot\" :this.state.trends}   <br/>\n          Koronatartuntoja: {this.state.korona   === \"\" ? \"Klikkaa kuntaa nähdäksesi tiedot\" :this.state.korona}   <br/>\n          {this.state.korrelaatio === \"\" ? \"\" : \"Korrelaatio: \" + this.state.korrelaatio}                          <br/>\n          {this.state.korrelaatio === \"\" ? \"\" : \"Pearsonin korrelaatiokerroin on \" + this.state.korrelaatiokerroin}\n        </p>\n      </div>\n    )\n  }\n\n}\n\nexport default Laatikko","import { Component } from 'react'\nvar vanhatRajat;\n\n\n\nfunction käsittele(sisään, ulos, raja){\n    let [ylä, ala] = raja\n    if (ylä < ala){\n        [ala,ylä] = raja\n    }\n\n    for (const element of ulos.kunnat){\n        element.data = 0\n        var id = \"\" + element.koodi\n        \n        for (var i = ala; i < ylä; i++){\n            var viikko = \"\" + ('0' + i).slice(-2)\n            if(sisään[\"2020\"][viikko][id] !== undefined){\n              if (sisään[\"2020\"][viikko][id] !== 0)     \n                element.data += parseInt(sisään[\"2020\"][viikko][id]) \n            }\n            \n        }\n    }\n    return ulos\n}\n\nclass ThlKasittely extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            haettuTHL: \"\",\n            käsiteltyData: props.käsiteltyData,\n            rajat: props.rajat,\n            init: 0           \n        };\n\n        vanhatRajat = this.state.rajat\n    }\n\n    componentDidMount() {\n        if(this.props.haettuTHL !== null){\n            this.setState({haettuTHL: this.props.haettuTHL})\n        }\n    }\n\n    updateAndNotify = () => {\n        this.setState({\n            käsiteltyData: käsittele(this.state.haettuTHL, this.state.käsiteltyData, this.state.rajat)\n        })  \n    }\n\n    componentDidUpdate(prevProps){\n        if(this.state.init=== 0){\n            this.setState({\n                init: 1\n            });\n            this.updateAndNotify()\n        }\n        if (prevProps.rajat !== this.props.rajat){\n            this.updateAndNotify()\n            this.setState({\n                rajat: this.props.rajat\n            })\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps) {\n        return { notifyRequired: prevProps.rajat !== this.props.rajat };\n    }\n    \n    render(){\n        \n        return (null)\n    }\n}\n\nexport default ThlKasittely","import axios from 'axios'\n\n// Package.json tiedostossa mainitun proxyn ansiosta backendin \n// osoitetta ei tarvitse kokonaan\nconst thlDataUrl = '/thl/lokaalitesti'\n\nconst getData = async () => {\n  const vastaus = await axios.get(thlDataUrl)\n  //console.log(vastaus.data)\n  return (vastaus.data)\n}\n\n\nconst getDataEiAsync = () => {\n  const vastaus = axios.get(thlDataUrl)\n  //console.log(vastaus.data)\n  return (vastaus.data)\n}\n\nexport default { getData, getDataEiAsync }","import axios from 'axios'\n\nconst getData = async (hakusana) => {\n    const vastaus = await axios.get('localhost:8000/gtrends/testi?hakusana=' + hakusana)\n    console.log(hakusana)\n    console.log(vastaus.data)\n  }\n  \n  export default { getData }","import eventBus from \"./EventBus\";\n\nfunction laskekorrelaatio(hakuData, koronaData){\n\t\n\tlet koronakeskihajontalaskuri = 0\n\tlet hakukeskihajontalaskuri   = 0\n\tlet koronakeskiarvolaskuri    = 0\n\tlet hakukeskiarvolaskuri \t\t\t= 0\n\n\tlet hakupituus   = hakuData.kunnat.length\n\tlet koronapituus = koronaData.kunnat.length\n\n\tfor(var element of koronaData.kunnat){\n\t\tkoronakeskiarvolaskuri += element.data\n\t}\n\n\tfor(element of hakuData.kunnat){\n\t\thakukeskiarvolaskuri += element.haku\n\t}\n\t\n\tlet hakukeskiarvo = hakukeskiarvolaskuri / hakupituus\n\tlet koronakeskiarvo = koronakeskiarvolaskuri / koronapituus\n\n\tfor(element of koronaData.kunnat){\n\t\tkoronakeskihajontalaskuri += (element.data - koronakeskiarvo) * (element.data - koronakeskiarvo)\n\t}\n\n\tfor(element of hakuData.kunnat){\n\t\thakukeskihajontalaskuri += (element.haku - hakukeskiarvo) * (element.haku - hakukeskiarvo)\n\t}\n\n\t\n\tlet hakuhajonta = Math.sqrt(hakukeskihajontalaskuri / hakupituus) \n\tlet koronahajonta = Math.sqrt(koronakeskihajontalaskuri / koronapituus) \n\t\n\t\n\tlet pearsonlaskuri = 0\n\n\tfor(var helement of hakuData.kunnat){\n\t\tfor(element of koronaData.kunnat){\n\t\t\tif(helement.nimi === element.nimi){\n\t\t\t\tpearsonlaskuri += (helement.haku - hakukeskiarvo) * (element.data - koronakeskiarvo) //* (helement.haku - hakukeskiarvo)\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(koronakeskiarvo)\n\tconsole.log(koronapituus)\n\tconsole.log(koronahajonta)\n\n\tconsole.log(\"ero: \" + (koronakeskihajontalaskuri - pearsonlaskuri))\n\tconsole.log(\"pearsonlaskuri: \" + pearsonlaskuri)\n\tlet pearsonjakaja = (koronapituus * koronahajonta * hakuhajonta)\n\tconsole.log(\"pearsonjakaja: \" + pearsonjakaja)\n\tlet pearson = pearsonlaskuri / pearsonjakaja\n\tconsole.log (\"pearsonin korrelaatiokerroin: \" + pearson)\n\n\tlet data = {}\n\tdata.teksti = \tpearson > 0.7 || pearson < -0.7 ? \n\t\t\t\t\t\t\t\t\"muuttujien välillä on selvä lineaarinen yhteys\" :\n\t\t\t\t\t\t\tpearson > 0.3 || pearson < -0.3 ? \n\t\t\t\t\t\t\t\t\"muuttujien välillä on jonkin verran lineaarista yhteyttä\" :\n\t\t\t\t\t\t\tpearson > 0.1 || pearson < -0.1 ? \n\t\t\t\t\t\t\t\t\"muuttujien välillä ei ole juurikaan lineaarista yhteyttä\":\n\t\t\t\t\t\t\t\t\"muuttujien välillä ei ole lineaarista yhteyttä\";\n\n\tconsole.log(data.teksti)\n\n\tdata.pearson = pearson\n\teventBus.dispatch(\"korrelaatiodata\", data);\n}\n\nexport default laskekorrelaatio","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n});\n\n//Hakee päivän perusteella kuluvan viikon\nDate.prototype.getWeek = function() {\n  var onejan    = new Date(this.getFullYear(),0,1);\n  var today     = new Date(this.getFullYear(),this.getMonth(),this.getDate());\n  var dayOfYear = ((today - onejan + 86400000)/86400000);\n  return Math.ceil(dayOfYear/7)\n};\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function RangeSlider(props) {\n\n  //Labelit slideriin\n  const marks = [\n    {\n      value: 4,\n      label:'Tammi'\n    },\n    {\n      value: 12,\n      label:'Maalis'\n    },\n    {\n      value: 20,\n      label:'Touko'\n    },\n    {\n      value: 28,\n      label:'Heinä'\n    },\n    {\n      value: 36,\n      label:'Elo'\n    },\n    {\n      value: 44,\n      label:'Loka'\n    }\n  ];\n\n  var today     = new Date();\n  var max       = today.getWeek() - 1\n  const classes = useStyles();\n\n  if (max > 51){\n    marks.push({\n      value: 52,\n      label: 'Joulu'\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        Haettavat viikot koronatilastoille\n      </Typography>\n      <Slider\n        value             = {props.value}\n        onChange          = {props.handleChange}\n        valueLabelDisplay = \"auto\"\n        aria-labelledby   = \"range-slider\"\n        getAriaValueText  = {valuetext}\n        min               = {5}\n        max               = {max}\n        marks             = {marks}\n      />\n    </div>\n  );\n}","import React, { useState, useEffect, } from 'react'\nimport Footer from './components/Footer'\nimport Haku from './components/Haku'\nimport Kartta from './components/Kartta'\nimport Laatikko from './components/Laatikko'\nimport ThlKasittely from './services/thlkasittely'\nimport ThlService from './services/thl'\nimport GTrendsService from './services/gtrends'\nimport laskekorrelaatio from './components/korrelaatiolaskin'\nimport RangeSlider from './components/Slider'\n\nvar _               = require('lodash');\nlet avain           = require('./data/avain.json')\nlet hakuData        = _.cloneDeep(avain)\n    hakuData.haettu = 0\nlet koronaData      = _.cloneDeep(avain)\n\n\n\nfunction App() {\n  const [hakusana, setHakusana]                      = useState('')\n  const [asetettuHakusana = \"\", setAsetettuHakusana] = useState('')\n  // ThlData sisältää backendiltä saadun datan. Tätä ei saa muuttaa\n  const [thlData, setThlData]                        = useState(null)\n  const [kartanThlData, setKartanThlData]            = useState(_.cloneDeep(avain))\n  const [sliderValue, setSliderValue]                = useState([5, 6]);\n  const [rajat, setRajat]                            = useState([5 ,44])\n  const nimi    = ''\n  const luku    = ''\n  const korona  = ''\n\n  // Effect pyytää THL-datan backendiltä sivun auettua ja \n  // asettaa sen thlData-tilaan.\n  // Eli tilaksi asetetaan ensiksi []. \n  useEffect(() => {\n    async function initThlData() {\n      const thl = await ThlService.getData()\n      setThlData(thl)\n      console.log(thl)\n    }\n    initThlData()\n  }, [])\n\n\n  // Tarkkailee hakusanaan tehtäviä muutoksia ja tallentaa ne valueen\n  const handleHakusanaChange = (e) => {\n    console.log(hakusana);\n    setHakusana(e.target.value);\n  }\n\n  const handleSliderChange = (event, newValue) => {\n    setSliderValue(newValue);\n    setRajat(newValue)\n    //console.log(sliderValue)\n  };\n\n  // Hakee annetun hakusanan perusteella tuloksia??\n  const hae = () => {\n    hakuData.haettu = 1;\n    for (const element of hakuData.kunnat) {\n      element.haku = Math.floor(Math.random() * 100);\n    }\n    let hakuTulos = GTrendsService.getData(hakusana);\n    console.log(hakuTulos);\n  }\n\n  // Kutsuu hae-funktiota jos ollaan painettu enteriä\n  const handleEnterPress = (e) => {\n    if (e.key === 'Enter') {\n      setAsetettuHakusana(hakusana);\n      console.log(hakusana);\n      console.log(asetettuHakusana);\n      hae();\n\n      laskekorrelaatio(hakuData, koronaData)\n    }\n  }\n\n  if(thlData !== null){\n    return (\n      <div className=\"App\">\n        <Kartta \n          koronaData     = {koronaData} \n          hakuData       = {hakuData} />\n        <Haku \n          value          = {hakusana} \n          handleChange   = {handleHakusanaChange} \n          handleKeyPress = {handleEnterPress}/>\n        <Laatikko \n          sana           = {asetettuHakusana} \n          kaupunki       = {nimi} \n          tiheys         = {luku} \n          tartuntoja     = {korona}/>\n        <RangeSlider \n          value          = {sliderValue} \n          handleChange   = {handleSliderChange}/>\n        <Footer />\n        <ThlKasittely\n          haettuTHL      = {thlData}\n          käsiteltyData  = {koronaData}\n          rajat          = {sliderValue}\n        />\n      </div>\n    );\n  }else{\n    return (\n      <div className=\"App\">\n        <p>Odota hetki kun sivu lataantuu</p>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}